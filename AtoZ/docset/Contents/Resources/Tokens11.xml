<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AZOverlayView.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AZOverlayView</TokenIdentifier>
			<Abstract>The overlay view.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>
			
			<NodeRef refid="11"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setOverlayDataSource:</TokenIdentifier>
			<Abstract>Sets the receiver’s data source to a given object.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cat/NSObject(AZOverlayViewDataSource)</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (weak) IBOutlet id overlayDataSource</Declaration>
			
			
			<Anchor>//api/name/overlayDataSource</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/overlayDataSource</TokenIdentifier>
			<Abstract>Sets the receiver’s data source to a given object.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cat/NSObject(AZOverlayViewDataSource)</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (weak) IBOutlet id overlayDataSource</Declaration>
			
			
			<Anchor>//api/name/overlayDataSource</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setOverlayDelegate:</TokenIdentifier>
			<Abstract>Sets the receiver’s overlay delegate to a given object.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cat/NSObject(AZOverlayViewDelegate)</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (weak) IBOutlet id overlayDelegate</Declaration>
			
			
			<Anchor>//api/name/overlayDelegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/overlayDelegate</TokenIdentifier>
			<Abstract>Sets the receiver’s overlay delegate to a given object.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cat/NSObject(AZOverlayViewDelegate)</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (weak) IBOutlet id overlayDelegate</Declaration>
			
			
			<Anchor>//api/name/overlayDelegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/reloadData</TokenIdentifier>
			<Abstract>Marks the receiver as needing redisplay, so it will reload the data for
visible cells and draw the new values.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>- (void)reloadData</Declaration>
			
			
			<Anchor>//api/name/reloadData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/enterState:</TokenIdentifier>
			<Abstract>Attempt to enter new state.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>- (BOOL)enterState:(AZState)theState</Declaration>
			<Parameters>
				<Parameter>
					<Name>theState</Name>
					<Abstract>The state that should be entered.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>YES if the state could be changed; otherwise NO.</Abstract></ReturnValue>
			<Anchor>//api/name/enterState:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setTarget:</TokenIdentifier>
			<Abstract>Specifies the target object to receive action messages from the receiver.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/action</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/doubleAction</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/rightAction</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/clickedOverlay</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (weak) IBOutlet id target</Declaration>
			
			
			<Anchor>//api/name/target</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/target</TokenIdentifier>
			<Abstract>Specifies the target object to receive action messages from the receiver.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/action</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/doubleAction</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/rightAction</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/clickedOverlay</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (weak) IBOutlet id target</Declaration>
			
			
			<Anchor>//api/name/target</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setAction:</TokenIdentifier>
			<Abstract>Specifies the message selector sent to the target when the user single-clicks
an overlay.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/target</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/clickedOverlay</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property SEL action</Declaration>
			
			
			<Anchor>//api/name/action</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/action</TokenIdentifier>
			<Abstract>Specifies the message selector sent to the target when the user single-clicks
an overlay.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/target</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/clickedOverlay</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property SEL action</Declaration>
			
			
			<Anchor>//api/name/action</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setDoubleAction:</TokenIdentifier>
			<Abstract>Specifies the message selector sent to the target when the user double-clicks
an overlay.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/target</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/clickedOverlay</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property SEL doubleAction</Declaration>
			
			
			<Anchor>//api/name/doubleAction</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/doubleAction</TokenIdentifier>
			<Abstract>Specifies the message selector sent to the target when the user double-clicks
an overlay.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/target</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/clickedOverlay</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property SEL doubleAction</Declaration>
			
			
			<Anchor>//api/name/doubleAction</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setRightAction:</TokenIdentifier>
			<Abstract>Specifies the message selector sent to the target when the user right-clicks
an overlay.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/target</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/clickedOverlay</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property SEL rightAction</Declaration>
			
			
			<Anchor>//api/name/rightAction</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/rightAction</TokenIdentifier>
			<Abstract>Specifies the message selector sent to the target when the user right-clicks
an overlay.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/target</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/clickedOverlay</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property SEL rightAction</Declaration>
			
			
			<Anchor>//api/name/rightAction</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setClickedOverlay:</TokenIdentifier>
			<Abstract>Specifies the index of the overlay the user clicked to trigger an action message.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/target</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (readonly) NSInteger clickedOverlay</Declaration>
			
			
			<Anchor>//api/name/clickedOverlay</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/clickedOverlay</TokenIdentifier>
			<Abstract>Specifies the index of the overlay the user clicked to trigger an action message.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/target</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (readonly) NSInteger clickedOverlay</Declaration>
			
			
			<Anchor>//api/name/clickedOverlay</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setAllowsOverlaySelection:</TokenIdentifier>
			<Abstract>Specifies whether receiver should allow overlay selection.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property BOOL allowsOverlaySelection</Declaration>
			
			
			<Anchor>//api/name/allowsOverlaySelection</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/allowsOverlaySelection</TokenIdentifier>
			<Abstract>Specifies whether receiver should allow overlay selection.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property BOOL allowsOverlaySelection</Declaration>
			
			
			<Anchor>//api/name/allowsOverlaySelection</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setAllowsEmptyOverlaySelection:</TokenIdentifier>
			<Abstract>Specifies whether receiver should allow empty overlay selections.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property BOOL allowsEmptyOverlaySelection</Declaration>
			
			
			<Anchor>//api/name/allowsEmptyOverlaySelection</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/allowsEmptyOverlaySelection</TokenIdentifier>
			<Abstract>Specifies whether receiver should allow empty overlay selections.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property BOOL allowsEmptyOverlaySelection</Declaration>
			
			
			<Anchor>//api/name/allowsEmptyOverlaySelection</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setAllowsMultipleOverlaySelection:</TokenIdentifier>
			<Abstract>Specifies whether receiver should allow multiple overlay selection.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property BOOL allowsMultipleOverlaySelection</Declaration>
			
			
			<Anchor>//api/name/allowsMultipleOverlaySelection</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/allowsMultipleOverlaySelection</TokenIdentifier>
			<Abstract>Specifies whether receiver should allow multiple overlay selection.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property BOOL allowsMultipleOverlaySelection</Declaration>
			
			
			<Anchor>//api/name/allowsMultipleOverlaySelection</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/selectOverlayIndexes:byExtendingSelection:</TokenIdentifier>
			<Abstract>Sets the overlay selection using indexes possibly extending the selection.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>- (void)selectOverlayIndexes:(NSIndexSet *)indexes byExtendingSelection:(BOOL)extend</Declaration>
			<Parameters>
				<Parameter>
					<Name>indexes</Name>
					<Abstract>The indexes to select.</Abstract>
				</Parameter><Parameter>
					<Name>extend</Name>
					<Abstract>YES if the selection should be extended, NO if the current selection should be changed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/selectOverlayIndexes:byExtendingSelection:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/selectedOverlayIndex</TokenIdentifier>
			<Abstract>Returns the index of the last overlay selected or added to the selection.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>- (NSInteger)selectedOverlayIndex</Declaration>
			
			<ReturnValue><Abstract>The index of the last overlay selected or added to the selection, or –1 if no overlay is selected.</Abstract></ReturnValue>
			<Anchor>//api/name/selectedOverlayIndex</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/selectedOverlayIndexes</TokenIdentifier>
			<Abstract>Returns an index set containing the indexes of the selected overlays.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>- (NSIndexSet *)selectedOverlayIndexes</Declaration>
			
			<ReturnValue><Abstract>An index set containing the indexes of the selected overlays.</Abstract></ReturnValue>
			<Anchor>//api/name/selectedOverlayIndexes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/selectedOverlays</TokenIdentifier>
			<Abstract>Returns an array containing the selected overlays.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)selectedOverlays</Declaration>
			
			<ReturnValue><Abstract>An array containing the selected overlays.</Abstract></ReturnValue>
			<Anchor>//api/name/selectedOverlays</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/deselectOverlay:</TokenIdentifier>
			<Abstract>Deselects the overlay at overlayIndex if it’s selected, regardless of whether empty selection
is allowed.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>- (void)deselectOverlay:(NSInteger)overlayIndex</Declaration>
			<Parameters>
				<Parameter>
					<Name>overlayIndex</Name>
					<Abstract>The index of the overlay to deselect.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deselectOverlay:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/numberOfSelectedOverlays</TokenIdentifier>
			<Abstract>Returns the number of selected overlays.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>- (NSInteger)numberOfSelectedOverlays</Declaration>
			
			<ReturnValue><Abstract>The number of selected overlays.</Abstract></ReturnValue>
			<Anchor>//api/name/numberOfSelectedOverlays</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/isOverlaySelected:</TokenIdentifier>
			<Abstract>Returns a Boolean value that indicates whether the overlay at a given index is selected.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>- (BOOL)isOverlaySelected:(NSInteger)overlayIndex</Declaration>
			<Parameters>
				<Parameter>
					<Name>overlayIndex</Name>
					<Abstract>The index of the overlay to test.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>YES if the overlay at overlayIndex is selected, otherwise NO.</Abstract></ReturnValue>
			<Anchor>//api/name/isOverlaySelected:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/selectAllOverlays:</TokenIdentifier>
			<Abstract>Select all overlays.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>- (IBAction)selectAllOverlays:(id)sender</Declaration>
			<Parameters>
				<Parameter>
					<Name>sender</Name>
					<Abstract>Typically the object that sent the message.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/selectAllOverlays:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/deselectAllOverlays:</TokenIdentifier>
			<Abstract>Deselect all overlays.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>- (IBAction)deselectAllOverlays:(id)sender</Declaration>
			<Parameters>
				<Parameter>
					<Name>sender</Name>
					<Abstract>Typically the object that sent the message.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deselectAllOverlays:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setOverlayFillColor:</TokenIdentifier>
			<Abstract>The color used to fill an overlay.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property CGColorRef overlayFillColor</Declaration>
			
			
			<Anchor>//api/name/overlayFillColor</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/overlayFillColor</TokenIdentifier>
			<Abstract>The color used to fill an overlay.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property CGColorRef overlayFillColor</Declaration>
			
			
			<Anchor>//api/name/overlayFillColor</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setOverlayBorderColor:</TokenIdentifier>
			<Abstract>The color used for the border of an overlay.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property CGColorRef overlayBorderColor</Declaration>
			
			
			<Anchor>//api/name/overlayBorderColor</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/overlayBorderColor</TokenIdentifier>
			<Abstract>The color used for the border of an overlay.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property CGColorRef overlayBorderColor</Declaration>
			
			
			<Anchor>//api/name/overlayBorderColor</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setOverlaySelectionFillColor:</TokenIdentifier>
			<Abstract>The color used to fill a selected overlay.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property CGColorRef overlaySelectionFillColor</Declaration>
			
			
			<Anchor>//api/name/overlaySelectionFillColor</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/overlaySelectionFillColor</TokenIdentifier>
			<Abstract>The color used to fill a selected overlay.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property CGColorRef overlaySelectionFillColor</Declaration>
			
			
			<Anchor>//api/name/overlaySelectionFillColor</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setOverlaySelectionBorderColor:</TokenIdentifier>
			<Abstract>The color used for the border of a selected overlay.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property CGColorRef overlaySelectionBorderColor</Declaration>
			
			
			<Anchor>//api/name/overlaySelectionBorderColor</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/overlaySelectionBorderColor</TokenIdentifier>
			<Abstract>The color used for the border of a selected overlay.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property CGColorRef overlaySelectionBorderColor</Declaration>
			
			
			<Anchor>//api/name/overlaySelectionBorderColor</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setOverlayBorderWidth:</TokenIdentifier>
			<Abstract>Specifies the border width of an overlay.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property CGFloat overlayBorderWidth</Declaration>
			
			
			<Anchor>//api/name/overlayBorderWidth</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/overlayBorderWidth</TokenIdentifier>
			<Abstract>Specifies the border width of an overlay.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property CGFloat overlayBorderWidth</Declaration>
			
			
			<Anchor>//api/name/overlayBorderWidth</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setAllowsCreatingOverlays:</TokenIdentifier>
			<Abstract>Specifies whether receiver should allow creating overlays.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property BOOL allowsCreatingOverlays</Declaration>
			
			
			<Anchor>//api/name/allowsCreatingOverlays</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/allowsCreatingOverlays</TokenIdentifier>
			<Abstract>Specifies whether receiver should allow creating overlays.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property BOOL allowsCreatingOverlays</Declaration>
			
			
			<Anchor>//api/name/allowsCreatingOverlays</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setAllowsModifyingOverlays:</TokenIdentifier>
			<Abstract>Specifies whether receiver should allow modifying overlays.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property BOOL allowsModifyingOverlays</Declaration>
			
			
			<Anchor>//api/name/allowsModifyingOverlays</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/allowsModifyingOverlays</TokenIdentifier>
			<Abstract>Specifies whether receiver should allow modifying overlays.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property BOOL allowsModifyingOverlays</Declaration>
			
			
			<Anchor>//api/name/allowsModifyingOverlays</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setAllowsDeletingOverlays:</TokenIdentifier>
			<Abstract>Specifies whether receiver should allow deleting overlays.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property BOOL allowsDeletingOverlays</Declaration>
			
			
			<Anchor>//api/name/allowsDeletingOverlays</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/allowsDeletingOverlays</TokenIdentifier>
			<Abstract>Specifies whether receiver should allow deleting overlays.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property BOOL allowsDeletingOverlays</Declaration>
			
			
			<Anchor>//api/name/allowsDeletingOverlays</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AZOverlayView/setAllowsOverlappingOverlays:</TokenIdentifier>
			<Abstract>Specifies whether receiver should allow overlapping overlays. This will affect creating, moving, and resizing overlays.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property BOOL allowsOverlappingOverlays</Declaration>
			
			
			<Anchor>//api/name/allowsOverlappingOverlays</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AZOverlayView/allowsOverlappingOverlays</TokenIdentifier>
			<Abstract>Specifies whether receiver should allow overlapping overlays. This will affect creating, moving, and resizing overlays.</Abstract>
			<DeclaredIn>AZOverlay.h</DeclaredIn>			
			
			<Declaration>@property BOOL allowsOverlappingOverlays</Declaration>
			
			
			<Anchor>//api/name/allowsOverlappingOverlays</Anchor>
		</Token>
		
	</File>
</Tokens>